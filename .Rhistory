dbSendQuery(connection_object,stmt)
skip_rows <- which(value$state=="static")
if (length(skip_rows) > 0) { events <- value[-skip_rows,c("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file","event_id","state")]
} else { events <- value[,c("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file","event_id","state")] }
postgresqlCopyInDataframe(connection_object, events)
stmt <- '
insert into pd_wbgtravel.dev_events("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file")
select "Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file"
from temp_dev_events
where state="new";
delete from pd_wbgtravel.dev_events
where exists(select * from temp_dev_events where temp_dev_events.state = "delete" and temp_dev_events.event_id = dev_events.event_id);
update pd_wbgtravel.dev_events
SET ("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file") =
(SELECT "Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file"
FROM temp_dev_events
WHERE temp_dev_events.state = "modified" AND temp_deve_events.event_id = dev_events.event_id);
'
dbSendQuery(connection_object,stmt)
stmt <- '
insert into pd_wbgtravel.dev_events("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file")
select "Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file"
from temp_dev_events
where state=\'new\';
delete from pd_wbgtravel.dev_events
where exists(select * from temp_dev_events where temp_dev_events.state = \'delete\' and temp_dev_events.event_id = dev_events.event_id);
update pd_wbgtravel.dev_events
SET ("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file") =
(SELECT "Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file"
FROM temp_dev_events
WHERE temp_dev_events.state = \'modified\' AND temp_deve_events.event_id = dev_events.event_id);
'
dbSendQuery(connection_object,stmt)
event$`Visit start`
events$`Visit start`
class(events$`Visit start`)
as.PosixCt(events$`Visit start`)
as.POSIXct.date(events$`Visit start`)
as.POSIXct.Date(events$`Visit start`)
?as.POSIXct
as.POSIXct(events$`Visit start`)
as.POSIXct(events$`Visit start`,tz="")
as.POSIXct(events$`Visit start`,tz=NULL)
as.POSIXct(events$`Visit start`,tz="UTC")
as.POSIXct(events$`Visit start`,tz="")
POSIXct(events$`Visit start`,tz="")
as.POSIXct.Date(events$`Visit start`,tz="")
as.POSIXct.Date(events$`Visit start`,tz="UTC")
as.POSIXlt(events$`Visit start`,tz="UTC")
as.POSIXlt(events$`Visit start`)
as.POSIXlt(events$`Visit start`,tz=NULL)
as.POSIXlt(events$`Visit start`,tz="")
dbSendQuery(connection_object,"DROP TABLE temp_dev_events")
value <- get_data(tab = 'dev_events',
schema = 'pd_wbgtravel',
connection_object = pool)
value$state <- "modified" #SAH states [static,modified,new,delete]
stmt <- 'CREATE TABLE if not exists public.temp_dev_events (
"Person" varchar(255),
"Organization" varchar(255),
"City of visit" varchar(255),
"Country of visit" varchar(255),
"Counterpart" varchar(255),
"Visit start" varchar(255),
"Visit end" varchar(255),
"Visit month" varchar(255),
"Lat" numeric,
"Long" numeric,
"Event" varchar(255),
"file" varchar(255),
"event_id" int2 NOT NULL,
"state" varchar(15) NOT NULL);'
dbSendQuery(connection_object,stmt)
stmt <- ' COPY public.temp_dev_events("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file","event_id","state") FROM STDIN;'
dbSendQuery(connection_object,stmt)
skip_rows <- which(value$state=="static")
if (length(skip_rows) > 0) { events <- value[-skip_rows,c("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file","event_id","state")]
} else { events <- value[,c("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file","event_id","state")] }
events$`Visit start` <- as.POSIXlt(events$`Visit start`,tz="")
events$`Visit end` <- as.POSIXlt(events$`Visit start`,tz="")
postgresqlCopyInDataframe(connection_object, events)
skip_rows <- which(value$state=="static")
if (length(skip_rows) > 0) { events <- value[-skip_rows,c("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file","event_id","state")]
} else { events <- value[,c("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file","event_id","state")] }
events$`Visit start` <- as.POSIXlt(events$`Visit start`,tz="")
events$`Visit end` <- as.POSIXlt(events$`Visit end`,tz="")
postgresqlCopyInDataframe(connection_object, events)
events
dbSendQuery(connection_object,"DROP TABLE temp_dev_events")
stmt <- 'CREATE TABLE if not exists public.temp_dev_events (
"Person" varchar(255),
"Organization" varchar(255),
"City of visit" varchar(255),
"Country of visit" varchar(255),
"Counterpart" varchar(255),
"Visit start" date,
"Visit end" date,
"Visit month" varchar(255),
"Lat" numeric,
"Long" numeric,
"Event" varchar(255),
"file" varchar(255),
"event_id" int2 NOT NULL,
"state" varchar(15) NOT NULL);'
dbSendQuery(connection_object,stmt)
stmt <- ' COPY public.temp_dev_events("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file","event_id","state") FROM STDIN;'
dbSendQuery(connection_object,stmt)
skip_rows <- which(value$state=="static")
if (length(skip_rows) > 0) { events <- value[-skip_rows,c("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file","event_id","state")]
} else { events <- value[,c("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file","event_id","state")] }
events$`Visit start` <- as.POSIXlt(events$`Visit start`,tz="")
events$`Visit end` <- as.POSIXlt(events$`Visit end`,tz="")
postgresqlCopyInDataframe(connection_object, events)
events[,6]
events[,7]
length(events[,7])
nrows(events)
nrow(events)
length(events[,6])
events[["`Visit start"]] <- as.POSIXlt(events$`Visit start`,tz="")
skip_rows <- which(value$state=="static")
events[["Visit start"]] <- as.POSIXlt(events$`Visit start`,tz="")
events[["Visit end"]] <- as.POSIXlt(events$`Visit end`,tz="")
postgresqlCopyInDataframe(connection_object, events)
skip_rows <- which(value$state=="static")
if (length(skip_rows) > 0) { events <- value[-skip_rows,c("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file","event_id","state")]
} else { events <- value[,c("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file","event_id","state")] }
events[["Visit start"]] <- as.POSIXct(events$`Visit start`,tz="")
events[["Visit end"]] <- as.POSIXct(events$`Visit end`,tz="")
events
View(events)
dim(events)
postgresqlCopyInDataframe(connection_object, events)
dbSendQuery(connection_object,"DROP TABLE temp_dev_events")
value <- get_data(tab = 'dev_events',
schema = 'pd_wbgtravel',
connection_object = pool)
value$state <- "modified" #SAH states [static,modified,new,delete]
stmt <- 'CREATE TABLE if not exists public.temp_dev_events (
"Person" varchar(255),
"Organization" varchar(255),
"City of visit" varchar(255),
"Country of visit" varchar(255),
"Counterpart" varchar(255),
"Visit start" date,
"Visit end" date,
"Visit month" varchar(255),
"Lat" numeric,
"Long" numeric,
"Event" varchar(255),
"file" varchar(255),
"event_id" int2 NOT NULL,
"state" varchar(15) NOT NULL);'
dbSendQuery(connection_object,stmt)
stmt <- ' COPY public.temp_dev_events("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file","event_id","state") FROM STDIN;'
dbSendQuery(connection_object,stmt)
skip_rows <- which(value$state=="static")
if (length(skip_rows) > 0) { events <- value[-skip_rows,c("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file","event_id","state")]
} else { events <- value[,c("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file","event_id","state")] }
dim(events)
events[["Visit start"]] <- as.POSIXct(events$`Visit start`,tz="")
events[["Visit end"]] <- as.POSIXct(events$`Visit end`,tz="")
postgresqlCopyInDataframe(connection_object, events)
events[["Visit start"]] <- as.POSIXlt(events$`Visit start`,tz="")
events[["Visit end"]] <- as.POSIXlt(events$`Visit end`,tz="")
postgresqlCopyInDataframe(connection_object, events)
skip_rows <- which(value$state=="static")
if (length(skip_rows) > 0) { events <- value[-skip_rows,c("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file","event_id","state")]
} else { events <- value[,c("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file","event_id","state")] }
events[["Visit start"]] <- as.POSIXlt(events$`Visit start`,tz="")
events[["Visit end"]] <- as.POSIXlt(events$`Visit end`,tz="")
postgresqlCopyInDataframe(connection_object, events)
dim(value)
events <- value
events[["Visit start"]] <- as.POSIXlt(events$`Visit start`,tz="")
events[["Visit end"]] <- as.POSIXlt(events$`Visit end`,tz="")
postgresqlCopyInDataframe(connection_object, events)
skip_rows <- which(value$state=="static")
if (length(skip_rows) > 0) { events <- value[-skip_rows,c("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file","event_id","state")]
} else { events <- value[,c("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file","event_id","state")] }
events
events[1,6]
class(events[1,6])
as.character(events[1,6])
events[["Visit start"]] <- as.character(events[["Visit start"]])
events[["Visit end"]] <- as.character(events[["Visit end"]])
postgresqlCopyInDataframe(connection_object, events)
# Establish the connection
connection_object <- credentials_connect(the_credentials)
pool <- create_pool(options_list = credentials_extract(),
use_sqlite = use_sqlite)
# Read in data from the database
value <- get_data(tab = 'dev_events',
schema = 'pd_wbgtravel',
connection_object = pool)
value$state <- "modified" #SAH states [static,modified,new,delete]
stmt <- 'CREATE TABLE if not exists public.temp_dev_events (
"Person" varchar(255),
"Organization" varchar(255),
"City of visit" varchar(255),
"Country of visit" varchar(255),
"Counterpart" varchar(255),
"Visit start" date,
"Visit end" date,
"Visit month" varchar(255),
"Lat" numeric,
"Long" numeric,
"Event" varchar(255),
"file" varchar(255),
"event_id" int2 NOT NULL,
"state" varchar(15) NOT NULL);'
dbSendQuery(connection_object,stmt)
stmt <- ' COPY public.temp_dev_events("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file","event_id","state") FROM STDIN;'
dbSendQuery(connection_object,stmt)
skip_rows <- which(value$state=="static")
if (length(skip_rows) > 0) { events <- value[-skip_rows,c("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file","event_id","state")]
} else { events <- value[,c("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file","event_id","state")] }
#  events[["Visit start"]] <- as.POSIXlt(events$`Visit start`,tz="")
#  events[["Visit end"]] <- as.POSIXlt(events$`Visit end`,tz="")
events[["Visit start"]] <- as.character(events[["Visit start"]])
events[["Visit end"]] <- as.character(events[["Visit end"]])
postgresqlCopyInDataframe(connection_object, events)
?format
events[1,6]
skip_rows <- which(value$state=="static")
if (length(skip_rows) > 0) { events <- value[-skip_rows,c("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file","event_id","state")]
} else { events <- value[,c("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file","event_id","state")] }
events[1,6]
?format.Date
format.Date(events[1,6],"%a %b %d")
format.Date(events[1,6],"%Y %b %d")
format.Date(events[1,6],"%Y %m %d")
as.character(format.Date(events[1,6],"%Y %m %d"))
as.character(format.Date(events[1,6],"%Y-%m-%d"))
dbSendQuery(connection_object,"DROP TABLE temp_dev_events")
# Read in data from the database
value <- get_data(tab = 'dev_events',
schema = 'pd_wbgtravel',
connection_object = pool)
value$state <- "modified" #SAH states [static,modified,new,delete]
stmt <- 'CREATE TABLE if not exists public.temp_dev_events (
"Person" varchar(255),
"Organization" varchar(255),
"City of visit" varchar(255),
"Country of visit" varchar(255),
"Counterpart" varchar(255),
"Visit start" date,
"Visit end" date,
"Visit month" varchar(255),
"Lat" numeric,
"Long" numeric,
"Event" varchar(255),
"file" varchar(255),
"event_id" int2 NOT NULL,
"state" varchar(15) NOT NULL);'
dbSendQuery(connection_object,stmt)
stmt <- ' COPY public.temp_dev_events("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file","event_id","state") FROM STDIN;'
dbSendQuery(connection_object,stmt)
skip_rows <- which(value$state=="static")
if (length(skip_rows) > 0) { events <- value[-skip_rows,c("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file","event_id","state")]
} else { events <- value[,c("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file","event_id","state")] }
events[["Visit start"]] <- as.character(format.Date(events[["Visit start"]],"%Y-%m-%d"))
events[["Visit end"]] <- as.character(format.Date(events[["Visit end"]],"%Y-%m-%d"))
postgresqlCopyInDataframe(connection_object, events)
stmt <- '
insert into pd_wbgtravel.dev_events("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file")
select "Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file"
from temp_dev_events
where state=\'new\';
delete from pd_wbgtravel.dev_events
where exists(select * from temp_dev_events where temp_dev_events.state = \'delete\' and temp_dev_events.event_id = dev_events.event_id);
update pd_wbgtravel.dev_events
SET ("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file") =
(SELECT "Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file"
FROM temp_dev_events
WHERE temp_dev_events.state = \'modified\' AND temp_deve_events.event_id = dev_events.event_id);
'
dbSendQuery(connection_object,stmt)
stmt <- '
insert into pd_wbgtravel.dev_events("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file")
select "Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file"
from temp_dev_events
where state=\'new\';
delete from pd_wbgtravel.dev_events
where exists(select * from temp_dev_events where temp_dev_events.state = \'delete\' and temp_dev_events.event_id = dev_events.event_id);
update pd_wbgtravel.dev_events
SET ("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file") =
(SELECT "Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file"
FROM temp_dev_events
WHERE temp_dev_events.state = \'modified\' AND temp_dev_events.event_id = dev_events.event_id);
'
dbSendQuery(connection_object,stmt)
dbSendQuery(connection_object,stmt)
dbSendQuery(connection_object,"DROP TABLE temp_dev_events")
value <- get_data(tab = 'dev_events',
schema = 'pd_wbgtravel',
connection_object = pool)
value$state <- "modified" #SAH states [static,modified,new,delete]
stmt <- 'CREATE TABLE if not exists public.temp_dev_events (
"Person" varchar(255),
"Organization" varchar(255),
"City of visit" varchar(255),
"Country of visit" varchar(255),
"Counterpart" varchar(255),
"Visit start" date,
"Visit end" date,
"Visit month" varchar(255),
"Lat" numeric,
"Long" numeric,
"Event" varchar(255),
"file" varchar(255),
"event_id" int2 NOT NULL,
"state" varchar(15) NOT NULL);'
dbSendQuery(connection_object,stmt)
stmt <- ' COPY public.temp_dev_events("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file","event_id","state") FROM STDIN;'
dbSendQuery(connection_object,stmt)
skip_rows <- which(value$state=="static")
if (length(skip_rows) > 0) { events <- value[-skip_rows,c("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file","event_id","state")]
} else { events <- value[,c("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file","event_id","state")] }
events[["Visit start"]] <- as.character(format.Date(events[["Visit start"]],"%Y-%m-%d"))
events[["Visit end"]] <- as.character(format.Date(events[["Visit end"]],"%Y-%m-%d"))
postgresqlCopyInDataframe(connection_object, events)
events
value
value <- get_data(tab = 'dev_events',
schema = 'pd_wbgtravel',
connection_object = pool)
value$state <- "modified" #SAH states [static,modified,new,delete]
value
dbSendQuery(connection_object,"DROP TABLE temp_dev_events")
value <- get_data(tab = 'dev_events',
schema = 'pd_wbgtravel',
connection_object = pool)
value$state <- "modified" #SAH states [static,modified,new,delete]
stmt <- 'CREATE TABLE if not exists public.temp_dev_events (
"Person" varchar(255),
"Organization" varchar(255),
"City of visit" varchar(255),
"Country of visit" varchar(255),
"Counterpart" varchar(255),
"Visit start" date,
"Visit end" date,
"Visit month" varchar(255),
"Lat" numeric,
"Long" numeric,
"Event" varchar(255),
"file" varchar(255),
"event_id" int2 NOT NULL,
"state" varchar(15) NOT NULL);'
dbSendQuery(connection_object,stmt)
stmt <- ' COPY public.temp_dev_events("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file","event_id","state") FROM STDIN;'
dbSendQuery(connection_object,stmt)
skip_rows <- which(value$state=="static")
if (length(skip_rows) > 0) { events <- value[-skip_rows,c("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file","event_id","state")]
} else { events <- value[,c("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file","event_id","state")] }
events[["Visit start"]] <- as.character(format.Date(events[["Visit start"]],"%Y-%m-%d"))
events[["Visit end"]] <- as.character(format.Date(events[["Visit end"]],"%Y-%m-%d"))
postgresqlCopyInDataframe(connection_object, events)
stmt <- '
insert into pd_wbgtravel.dev_events("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file")
select "Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file"
from temp_dev_events
where state=\'new\';
delete from pd_wbgtravel.dev_events
where exists(select * from temp_dev_events where temp_dev_events.state = \'delete\' and temp_dev_events.event_id = dev_events.event_id);
update pd_wbgtravel.dev_events
SET ("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file") =
(SELECT "Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file"
FROM temp_dev_events
WHERE temp_dev_events.state = \'modified\' AND temp_dev_events.event_id = dev_events.event_id);
'
dbSendQuery(connection_object,stmt)
stmt <- '
insert into pd_wbgtravel.dev_events("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file")
select "Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file"
from temp_dev_events
where state=\'new\';
delete from pd_wbgtravel.dev_events
where exists(select * from temp_dev_events where temp_dev_events.state = \'delete\' and temp_dev_events.event_id = dev_events.event_id);
update pd_wbgtravel.dev_events
SET ("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file") =
(SELECT "Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file"
FROM temp_dev_events
WHERE temp_dev_events.state = \'modified\' AND temp_dev_events.event_id = dev_events.event_id);
'
dbSendQuery(connection_object,stmt)
stmt <- '
insert into pd_wbgtravel.dev_events("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file")
select "Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file"
from temp_dev_events
where state=\'new\';
delete from pd_wbgtravel.dev_events
where exists(select * from temp_dev_events where temp_dev_events.state = \'delete\' and temp_dev_events.event_id = dev_events.event_id);
update pd_wbgtravel.dev_events
SET ("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file") =
(SELECT "Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file"
FROM temp_dev_events
WHERE temp_dev_events.state = \'modified\' AND temp_dev_events.event_id = dev_events.event_id);
'
dbSendQuery(connection_object,stmt)
stmt <- '
insert into pd_wbgtravel.dev_events("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file")
select "Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file"
from temp_dev_events
where state=\'new\';
delete from pd_wbgtravel.dev_events
where exists(select * from temp_dev_events where temp_dev_events.state = \'delete\' and temp_dev_events.event_id = dev_events.event_id);
update pd_wbgtravel.dev_events
SET ("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file") =
(SELECT "Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file"
FROM temp_dev_events
WHERE temp_dev_events.state = \'modified\' AND temp_dev_events.event_id = dev_events.event_id);
'
dbSendQuery(connection_object,stmt)
stmt <- '
insert into pd_wbgtravel.dev_events("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file")
select "Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file"
from temp_dev_events
where state=\'new\';
delete from pd_wbgtravel.dev_events
where exists(select * from temp_dev_events where temp_dev_events.state = \'delete\' and temp_dev_events.event_id = dev_events.event_id);
update pd_wbgtravel.dev_events
SET ("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file") =
(SELECT "Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file"
FROM temp_dev_events
WHERE temp_dev_events.state = \'modified\' AND temp_dev_events.event_id = dev_events.event_id);
'
dbSendQuery(connection_object,stmt)
stmt <- '
insert into pd_wbgtravel.dev_events("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file")
select "Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file"
from temp_dev_events
where state=\'new\';
delete from pd_wbgtravel.dev_events
where exists(select * from temp_dev_events where temp_dev_events.state = \'delete\' and temp_dev_events.event_id = dev_events.event_id);
update pd_wbgtravel.dev_events
SET ("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file") =
(SELECT "Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file"
FROM temp_dev_events
WHERE temp_dev_events.state = \'modified\' AND temp_dev_events.event_id = dev_events.event_id);
'
dbSendQuery(connection_object,stmt)
stmt <- '
delete from pd_wbgtravel.dev_events
where exists(select * from temp_dev_events where temp_dev_events.state = \'delete\' and temp_dev_events.event_id = dev_events.event_id);
update pd_wbgtravel.dev_events
SET ("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file") =
(SELECT "Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file"
FROM temp_dev_events
WHERE temp_dev_events.state = \'modified\' AND temp_dev_events.event_id = dev_events.event_id);
'
dbSendQuery(connection_object,stmt)
stmt <- '
insert into pd_wbgtravel.dev_events("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file")
select "Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file"
from temp_dev_events
where state=\'new\';'
dbSendQuery(connection_object,stmt)
stmt <- '
delete from pd_wbgtravel.dev_events
where exists(select * from temp_dev_events where temp_dev_events.state = \'delete\' and temp_dev_events.event_id = dev_events.event_id);
'
dbSendQuery(connection_object,stmt)
stmt <- '
insert into pd_wbgtravel.dev_events("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file")
select "Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file"
from temp_dev_events
where state=\'new\';
'
dbSendQuery(connection_object,stmt)
stmt <- ' update pd_wbgtravel.dev_events
SET ("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file") =
(SELECT "Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file"
FROM temp_dev_events
WHERE temp_dev_events.state = \'modified\' AND temp_dev_events.event_id = dev_events.event_id);
'
dbSendQuery(connection_object,stmt)
dbSendQuery(connection_object,stmt)
stmt <- '
delete from pd_wbgtravel.dev_events
where exists(select * from temp_dev_events where temp_dev_events.state = \'delete\' and temp_dev_events.event_id = dev_events.event_id);
'
dbSendQuery(connection_object,stmt)
stmt <- '
insert into pd_wbgtravel.dev_events("Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file")
select "Person","Organization","City of visit","Country of visit","Counterpart","Visit start","Visit end","Visit month","Lat","Long","Event","file"
from temp_dev_events
where state=\'new\';
'
dbSendQuery(connection_object,stmt)
stmt <- '
update pd_wbgtravel.dev_events de SET
"Person"=tde."Person",
"Organization"=tde."Organization",
"City of visit"=tde."City of visit",
"Country of visit"=tde."Country of visit",
"Counterpart"=tde."Counterpart",
"Visit start"=tde."Visit start",
"Visit end"=tde."Visit end",
"Visit month"=tde."Visit month",
"Lat"=tde."Lat",
"Long"=tde."Long",
"Event"=tde."Event",
"file"=tde."file"
FROM temp_dev_events tde
WHERE tde.state = \'modified\' AND de.event_id=tde.event_id;
'
dbSendQuery(connection_object,stmt)
runApp()
runApp()
runApp()
runApp()
